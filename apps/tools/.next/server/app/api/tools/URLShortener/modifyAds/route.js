(()=>{var e={};e.id=2500,e.ids=[2500],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},6511:(e,r,s)=>{"use strict";s.d(r,{A:()=>o});var t=s(56037);let a=new t.Schema({alias:{type:String,required:!0,minlength:6,maxlength:6,unique:!0},longUrl:{type:String,required:!0},uploadedBy:{type:Number,required:!0,ref:"User"},adsLabel:{type:Number,enum:[0,1,2,3],default:1},expiredAt:{type:Date,default:null}},{timestamps:!0}),o=t.models?.ShortUrl||(0,t.model)("ShortUrl",a)},9913:(e,r,s)=>{"use strict";s.d(r,{A:()=>l});var t=s(56037);let a=process.env.MONGODB_URI,o=process.env.MONGODB_NAME;if(!a)throw Error("❌ MONGODB_URI is not defined in environment variables.");let n=global.mongoose||{conn:null,promise:null},i=async()=>(n.conn||(n.promise||(console.log("\uD83D\uDD04 Connecting to MongoDB..."),n.promise=t.connect(a,{dbName:o,maxPoolSize:10,serverSelectionTimeoutMS:8e3,socketTimeoutMS:45e3,retryWrites:!0,waitQueueTimeoutMS:5e3,bufferCommands:!1}).then(e=>(console.log("✅ Connected to MongoDB!"),e)).catch(e=>{throw console.error("❌ MongoDB Connection Error:",e),Error("MongoDB connection failed.")})),n.conn=await n.promise),n.conn);global.mongoose=n;let l=i},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},15946:()=>{},19121:e=>{"use strict";e.exports=require("next/dist/server/app-render/action-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},55698:()=>{},56037:e=>{"use strict";e.exports=require("mongoose")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},87997:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>w,routeModule:()=>p,serverHooks:()=>g,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>f});var t={};s.r(t),s.d(t,{POST:()=>d});var a=s(53358),o=s(24967),n=s(47614),i=s(88980),l=s(9913),c=s(6511),u=s(8527);async function d(e){try{if(!await (0,i.j2)())return u.NextResponse.json({success:!1,message:"Unauthorized"},{status:401});let{alias:r,ad:s}=await e.json();if(0!==s&&1!==s&&2!==s&&3!==s)return u.NextResponse.json({success:!1,message:"Invalid waiting type"},{status:400});if(!r||6!==r.trim().length)return u.NextResponse.json({success:!1,message:"Alias is required"},{status:400});await (0,l.A)();let t=await c.A.findOne({alias:r});if(!t)return u.NextResponse.json({success:!1,message:"Alias not found"},{status:404});if(t.adsLabel===s)return u.NextResponse.json({success:!0,message:"Waiting already updated"},{status:200});return t.adsLabel=s,await t.save(),u.NextResponse.json({success:!0,message:"Waiting updated successfully"},{status:200})}catch(e){return console.error("Error occurred while Url Ad Updating:",e),u.NextResponse.json({success:!1,message:"An error occurred while processing the request."},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/tools/URLShortener/modifyAds/route",pathname:"/api/tools/URLShortener/modifyAds",filename:"route",bundlePath:"app/api/tools/URLShortener/modifyAds/route"},resolvedPagePath:"C:\\Users\\subha\\Projects\\Anix7 Workspace\\apps\\tools\\app\\api\\tools\\URLShortener\\modifyAds\\route.js",nextConfigOutput:"",userland:t}),{workAsyncStorage:m,workUnitAsyncStorage:f,serverHooks:g}=p;function w(){return(0,n.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:f})}},88980:(e,r,s)=>{"use strict";s.d(r,{fG:()=>g,LO:()=>w,j2:()=>h});var t=s(50378),a=s(24613),o=s(15566),n=s(92430),i=s(25348);let l=process.env.AUTH_SECRET,c=process.env.BASE_URL,u=process.env.OWNER_EMAIL,d=["subhamduary11@gmail.com","no-reply.tools@anix7.in","contact.tools@anix7.in","contactme5950@gmail.com"];async function p(e){try{let r=await fetch(`${c}/api/admin/FromAuthjs/getUserByEmail`,{method:"POST",headers:{Authorization:`Bearer ${l}`,"Content-Type":"application/json"},body:JSON.stringify({email:e})});if(!r.ok){let e=await r.json();throw console.error("Error:",e.message),Error("Failed to fetch user")}return(await r.json()).user||null}catch(e){throw console.error("Network error in getUserFromDb:",e),Error("Server error")}}async function m(e){try{let r=await fetch(`${c}/api/admin/FromAuthjs/createUser`,{method:"POST",headers:{Authorization:`Bearer ${l}`,"Content-Type":"application/json"},body:JSON.stringify({userDetails:e})});if(!r.ok){let e=await r.json();return console.error("Error:",e.message),!1}return!0}catch(e){return console.error("Network error in createUser:",e),!1}}let f={pages:{signIn:"/"},providers:[(0,t.A)({name:"Credentials",id:"credentials",credentials:{email:{label:"Email",type:"text"},password:{label:"Password",type:"password"}},async authorize(e){if(!e)return null;try{let{email:r,password:s}=await n.a.parseAsync(e),t=await p(r);if(!t||!await (0,o.UD)(s,t.password))return null;let{userId:a,firstName:i,lastName:l,isVerified:c,profilePic:u,balance:d,referredBy:m}=t;return{userId:a,email:r,firstName:i,lastName:l,isVerified:c,profilePic:u,balance:d,referredBy:m}}catch(e){return null}}}),(0,a.A)({authorization:{params:{prompt:"consent",access_type:"offline",response_type:"code"}}})],callbacks:{async signIn({user:e,account:r,profile:s}){try{if("google"===r.provider){if(!e?.email)return!1;if(!await p(e.email)){let r=await (0,i.UL)(),t=r.get("referral_id")?.value||null;return await m({firstName:e.name,lastName:null,email:e.email,isVerified:s?.email_verified||!1,profilePic:e.image,referredBy:t})}}return!0}catch(e){return console.error("Unexpected error in signIn callback:",e),!1}},async jwt({token:e,user:r,account:s,profile:t}){if(r&&s){var a;let t=r.userId?r:await p(e.email);e.userId=t?.userId,e.firstName=t?.firstName,e.lastName=t?.lastName,e.isVerified=t?.isVerified,e.profilePic=t?.profilePic,e.balance=t?.balance,e.referredBy=t?.referredBy,e.loggedBy=s?.provider,e.role=(a=t.email)===u?"owner":d.includes(a)?"admin":"user"}return e},session:({session:e,token:r})=>(r&&(e.user.userId=r.userId,e.user.firstName=r.firstName,e.user.lastName=r.lastName,e.user.isVerified=r.isVerified,e.user.profilePic=r.profilePic,e.loggedBy=r.loggedBy,e.user.role=r.role),e)}},{handlers:{GET:g,POST:w},auth:h,signIn:y,signOut:x}=(0,s(83010).Ay)({session:{strategy:"jwt"},...f})},92430:(e,r,s)=>{"use strict";s.d(r,{O:()=>o,a:()=>a});var t=s(31825);let a=(0,t.Ik)({email:(0,t.Yj)().email("Invalid email address.").transform(e=>e.toLowerCase().replace(/\+.*(?=@)/,"")),password:(0,t.Yj)().min(1,"Password is required").max(32,"Entered password is too long")}),o=(0,t.Ik)({firstName:(0,t.Yj)().min(1,"First name is required.").max(48,"First name must be less than 48 characters."),lastName:(0,t.Yj)().max(48,"Last name must be less than 48 characters.").optional(),email:(0,t.Yj)().email("Invalid email address.").transform(e=>e.toLowerCase().replace(/\+.*(?=@)/,"")),password:(0,t.Yj)().min(1,"Please enter a password.").min(8,"Password must be at least 8 characters long.").max(32,"Password must be less than 32 characters long.").regex(/[A-Z]/,"Password must contain at least one uppercase letter.").regex(/[a-z]/,"Password must contain at least one lowercase letter.").regex(/\d/,"Password must contain at least one number.").regex(/[!@#$%^&*(),.?":{}|<>]/,"Password must contain at least one special character."),confirmPassword:(0,t.Yj)(),isVerified:(0,t.zM)().optional().default(!1),profilePic:(0,t.Yj)().url("Invalid URL.").optional().nullable(),balance:(0,t.ai)().optional().default(0),referredBy:(0,t.Yj)().optional().nullable()}).refine(e=>e.password===e.confirmPassword,{message:"Passwords do not match.",path:["confirmPassword"]})}};var r=require("../../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[7614,3532,7929,7792,4608,5646],()=>s(87997));module.exports=t})();